@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using Umbraco.Cms.Core.Models

@{
    var selection = Model.Root().Children().Where(x => x.IsVisible());
    var HomePage = Model.Root();
    var HeaderLogo = HomePage.Value<MediaWithCrops>("headerLogo");

}
 
<header>
    <div id="header-sticky" class="header__main">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-xl-12 col-lg-12">
                    <div class="header__main-content-wrapper p-relative">
                        <div class="header__main-left">
                            <div class="header__logo">
                                <a href="index-2.html" class="logo-dark">
                                    <img src="@HeaderLogo?.MediaUrl()"
                                         alt="@HeaderLogo?.Name">
                                </a>
                            </div>
                        </div>
                        <div class="header__main-right">
                            <div class="main-menu d-none d-xl-block">
                                <nav id="mobile-menu">
                                    <ul class="main-menu-3 menu-anim ">


                                        @if (!HomePage.Value<bool>("umbracoNaviHide"))
                                        {
                                            <li><a href="@HomePage.Url()">@(!(String.IsNullOrEmpty(HomePage.Value<String>("menuDisplayName"))) ? HomePage.Value("menuDisplayName") : HomePage.Name)</a></li>
                                        }

                                        @foreach (var item in selection)
                                        {
                                            <li>
                                                <a href="@item.Url()">@(!(String.IsNullOrEmpty(item.Value<String>("menuDisplayName"))) ? item.Value("menuDisplayName") : item.Name)</a>
                                                @if (@item.Children.Where(x => x.IsVisible()).Any() && item.Name != "Blog" && item.Name != "Courses" && item.Name != "Projects")
                                                {
                                                    <ul class="main-dropdown">
                                                        @foreach (var Child in item.Children.Where(x => x.IsVisible()))
                                                        {
                                                            <li><a href="@Child.Url()">@(!(String.IsNullOrEmpty(item.Value<String>("menuDisplayName"))) ? Child.Value("menuDisplayName") : Child.Name)</a></li>
                                                        }
                                                    </ul>
                                                }
                                            </li>
                                        }
                                    </ul>
                                </nav>
                            </div>
                            <div class="message__now d-none d-sm-inline-flex">
                                <div class="meta-item meta-item-message">
                                    <div class="meta-item__icon">
                                        <img src="assets/img/icons/hand.png" alt="image not found">
                                    </div>
                                    <div class="meta-item__text">
                                        <p><a href="#">Say Hello</a></p>
                                    </div>
                                </div>
                            </div>
                            <div class="menu__bar">
                                <a class="offset-btn" href="javascript:void(0)">
                                    <div class="bar-icon mobile-menu-btn">
                                        <img src="assets/img/icons/line-bar.png" alt="img not found">
                                    </div>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</header>
<!-- header-area-end -->
@* <div class="">
    <form action="@Umbraco.Content("5bb2d02c-a1bf-43f3-b04b-b327b2e5248c").Url()" method="get" id="search-form" >
        <div class="control-group">
            <input id="key" name="key" type="text" class="search-field" placeholder="@Umbraco.GetDictionaryValue("Search")"
            value="@Context.Request.Query["key"]">
            
        </div>
  </form>
</div> *@
<!-- Header area end -->